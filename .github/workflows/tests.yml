name: tests

on:
  push:
  pull_request:
  schedule:
    - cron:  '42 5 * * *'

jobs:
  testsuite:
    name: all tests
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one or more already failed
      # and let the remaining matrix jobs be be executed anyway.
      fail-fast: false    
      matrix:
        # @todo: Change back to to php: [ '8.1', '8.2' ] if JWT token library from core is working PHP8.2
        php: [ '8.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install testing system
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s composerUpdate

      - name: Composer validate
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s composerValidate

      - name: Lint PHP
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s lint

      - name: CGL
        if: ${{ matrix.php <= '8.1' }}
        run: Build/Scripts/runTests.sh -n -p ${{ matrix.php }} -s cgl

      - name: phpstan
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s phpstan -e "--error-format=github"

      - name: Unit Tests
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s unit

      - name: Functional Tests with mariadb and mysqli
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d mariadb -a mysqli -s functional

      - name: Functional Tests with mariadb and pdo_mysql
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d mariadb -a pdo_mysql -s functional

      - name: Functional Tests with mysql and mysqli
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d mysql -a mysqli -s functional

      - name: Functional Tests with mysql and pdo_mysql
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d mysql -a pdo_mysql -s functional

      - name: Functional Tests with postgres
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d postgres -s functional

      - name: Functional Tests with sqlite
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d sqlite -s functional

      - name: Acceptance Tests mariadb and mysqli
        # @todo: Remove this constraint after firebase/php-jwt core dependency has solved PHP8.2 deprecation issue
        if: ${{ matrix.php <= '8.1' }}
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s acceptance -d mariadb -a mysqli

      - name: Acceptance Tests mariadb and pdo_mysql
        # @todo: Remove this constraint after firebase/php-jwt core dependency has solved PHP8.2 deprecation issue
        if: ${{ matrix.php <= '8.1' }}      
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s acceptance -d mariadb -a pdo_mysql

      - name: Acceptance Tests mysql and mysqli
        # @todo: Remove this constraint after firebase/php-jwt core dependency has solved PHP8.2 deprecation issue
        if: ${{ matrix.php <= '8.1' }}      
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s acceptance -d mysql -a mysqli

      - name: Acceptance Tests mysql and pdo_mysql
        # @todo: Remove this constraint after firebase/php-jwt core dependency has solved PHP8.2 deprecation issue
        if: ${{ matrix.php <= '8.1' }}      
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s acceptance -d mysql -a pdo_mysql

      - name: Acceptance Tests postgres
        # @todo: Remove this constraint after firebase/php-jwt core dependency has solved PHP8.2 deprecation issue
        if: ${{ matrix.php <= '8.1' }}      
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s acceptance -d postgres

      - name: Build CSS
        run: Build/Scripts/runTests.sh -s buildCss
